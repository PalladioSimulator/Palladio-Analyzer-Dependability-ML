modelName = "ReliabilityPrioritizedStrategy";

const float UPPER_THRESHOLD_RT = 0.1;

/*
 * Diese Werte sollten beim Aufruf der jeweil. Strategie geändert werden, jedoch ist das Kmodel nicht in der Lage Zustände zu halten.
 * Kann man isDefaultMLModelActivated & isFilteringActivated dem Kmodel als Probe-Werte übergeben?
 * 
 * Mögliche Future work für das Kmodel: Erweiterung um weiteren Field-Typen "state".
 */
optimizable bool{true, false} isDefaultMLModelActivated;
optimizable bool{true, false} isFilteringActivated;

envvar string imageBrightness :staticId"_rbdHAN4kEeqaAYEZJq_V3Q" dynamicId"_rbdHAN4kEeqaAYEZJq_V3Q"; // entity name: InstantiatedBrightnessMeasureTemplate
envvar string sensorNoise : staticId"_mDumMCpIEeuMpaabmuiN-Q" dynamicId"_mDumMCpIEeuMpaabmuiN-Q"; // entity name: InstantiatedSensorNoiseTemplate

probe float responseTime : monitorId"_EYxTcd4VEeqKieYo_sZiMQ"; // System Response Time : "Usage Scenario: EnvironmentPerception";

//query("... where system. ...") ocl : name "isDefaultMLModelActivated" "ocl constraint: " targetModel:PcmSystem -> auf PCM Modell anwenden

action SwitchToDefaultMLModel();
action SwitchToRobustMLModel();
action ActivateFilterComponent();
action DeactivateFilterComponent();

if (sensorNoise != "(SensorNoise=Low)" || imageBrightness != "(ImageBrightnessMeasure=Medium)") {
	if (sensorNoise != "(SensorNoise=Low)" && imageBrightness != "(ImageBrightnessMeasure=Medium)" && isDefaultMLModelActivated) {
		SwitchToRobustMLModel();
	}
	
	if (sensorNoise != "(SensorNoise=Low)" && !isFilteringActivated) {
		ActivateFilterComponent();
	}
}

if (responseTime > UPPER_THRESHOLD_RT) {
	if (isDefaultMLModelActivated) {
		SwitchToDefaultMLModel();
	} else {
		if (isFilteringActivated) {
			DeactivateFilterComponent();
		}
	}
}
